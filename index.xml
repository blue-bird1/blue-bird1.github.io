<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>青鸟的博客</title><link>https://blue-bird1.github.io/</link><description>Recent content on 青鸟的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 08 Dec 2019 12:01:04 +0800</lastBuildDate><atom:link href="https://blue-bird1.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Bug</title><link>https://blue-bird1.github.io/posts/bug/</link><pubDate>Sun, 08 Dec 2019 12:01:04 +0800</pubDate><guid>https://blue-bird1.github.io/posts/bug/</guid><description>仅作为个人的漏洞类型和技巧记录 于阅读漏洞报告时记录 类型 不需要特殊技巧 简单就可以确认的类型 GraphQL查询漏洞 Graphql作为一种前端查询</description></item><item><title>使用github Action自动化部署 Hugo</title><link>https://blue-bird1.github.io/posts/github-action-hugo/</link><pubDate>Wed, 04 Dec 2019 23:58:12 +0800</pubDate><guid>https://blue-bird1.github.io/posts/github-action-hugo/</guid><description>前言 最近由于一直在用的travis-ci出现了迷之bug,加上想尝试一下github action就决定尝试用github action替换tr</description></item><item><title>Cms代码审计方法</title><link>https://blue-bird1.github.io/posts/cms-audit/</link><pubDate>Sun, 01 Dec 2019 20:26:55 +0800</pubDate><guid>https://blue-bird1.github.io/posts/cms-audit/</guid><description>前言 记录cms挖掘漏洞的几种下手方法 基于危险函数 最常见的应该是这种了 通过搜索常见的危险函数如assert|eval|system|file_</description></item><item><title>Code Audit</title><link>https://blue-bird1.github.io/posts/code-audit/</link><pubDate>Tue, 26 Nov 2019 12:56:55 +0800</pubDate><guid>https://blue-bird1.github.io/posts/code-audit/</guid><description>前言 代码审计是白盒测试的重要部分,对它的自动化探索也从未停止,但是在现实环境复杂度下现有的工具 实用性并不用.只能实现发现简单漏洞.本文讨论现</description></item><item><title>时间攻击</title><link>https://blue-bird1.github.io/posts/time-attack/</link><pubDate>Fri, 22 Nov 2019 01:17:28 +0800</pubDate><guid>https://blue-bird1.github.io/posts/time-attack/</guid><description>前言 对于本篇博客的标题 读者应该都不陌生了 毕竟大名鼎鼎的cpu漏洞就有利用这种侧信道攻击的. 这种攻击的难度也很大,但是作为一种攻击却是挺有意思</description></item><item><title>Mysql 储存过程注入</title><link>https://blue-bird1.github.io/posts/mysql/</link><pubDate>Tue, 07 May 2019 02:42:17 +0800</pubDate><guid>https://blue-bird1.github.io/posts/mysql/</guid><description>Mysql 储存过程注入 mysql有着储存过程这个功能, 这次作者刚好遇到注入点在调用储存过程的sql注入. 基本知识 mysql可以通过以下语句创建一个储</description></item><item><title>在golang项目开始使用Bazel</title><link>https://blue-bird1.github.io/posts/go-bazel/</link><pubDate>Sat, 27 Apr 2019 19:32:12 +0800</pubDate><guid>https://blue-bird1.github.io/posts/go-bazel/</guid><description>在golang项目开始使用Bazel Bazel是一个由java编写的编译工具,支持多语言编译,扩展,远程缓存等大量功能. 下载 推荐通过http</description></item><item><title>XSS实战 跳转XSS</title><link>https://blue-bird1.github.io/posts/location-xss/</link><pubDate>Sat, 20 Apr 2019 12:43:40 +0800</pubDate><guid>https://blue-bird1.github.io/posts/location-xss/</guid><description>XSS实战: 跳转XSS 前言 跳转XSS实际上并不是一种新类型的攻击方式, 主要形成原因是 以前网站外部跳转时是直接接受参数然后跳转,导致了URL重</description></item><item><title>挖掘src漏洞</title><link>https://blue-bird1.github.io/posts/srcbug/</link><pubDate>Sun, 14 Apr 2019 23:22:41 +0800</pubDate><guid>https://blue-bird1.github.io/posts/srcbug/</guid><description>前言 挖src也将近两个月了,写篇博客总结一下. 首先挖洞成果 3中危 2低危, 收入~2k. 真实菜到扣脚,收入连泡面都吃不起.只挖了bilibili</description></item><item><title>现代化网站的渗透测试</title><link>https://blue-bird1.github.io/posts/newsitethink/</link><pubDate>Fri, 22 Feb 2019 21:07:40 +0800</pubDate><guid>https://blue-bird1.github.io/posts/newsitethink/</guid><description>对现代化网站的渗透测试的思考 前言 首先定义本文所说的现代化网站. 现代化网站是指符合以下多个特征的对外服务. 储存,数据库,网站程序等服务器高度分</description></item><item><title>Electron软件简单破解</title><link>https://blue-bird1.github.io/posts/electroncrack/</link><pubDate>Thu, 24 Jan 2019 23:14:25 +0800</pubDate><guid>https://blue-bird1.github.io/posts/electroncrack/</guid><description>electron 软件破解与修改入门 electron是一款流行的桌面软件框架, 可以用js来写桌面软件, 快速开发.为了提高开发效率,不少公司比如白帽汇直接采用</description></item><item><title>docker搭建复现环境</title><link>https://blue-bird1.github.io/posts/dockertopoc/</link><pubDate>Sat, 19 Jan 2019 22:52:13 +0800</pubDate><guid>https://blue-bird1.github.io/posts/dockertopoc/</guid><description>docker搭建复现环境 安全人员进行漏洞复现经常需要搭建漏洞环境, docker能够很方便搭建漏洞环境,同时提供相当好的性能,管理功能. doc</description></item><item><title>Iwebshop sql注入</title><link>https://blue-bird1.github.io/posts/iwebshopsql/</link><pubDate>Sat, 19 Jan 2019 18:12:19 +0800</pubDate><guid>https://blue-bird1.github.io/posts/iwebshopsql/</guid><description>&lt;h3 id=&#34;iwebshop-最新版本5-3-1-前台注入&#34;&gt;iwebshop 最新版本5.3.1 前台注入&lt;/h3&gt;
&lt;p&gt;iwebshop最新版存在一个非常弱智的注入漏洞&lt;/p&gt;</description></item><item><title>think5审计与调试技巧1</title><link>https://blue-bird1.github.io/posts/thinkphp5-1/</link><pubDate>Thu, 17 Jan 2019 23:19:42 +0800</pubDate><guid>https://blue-bird1.github.io/posts/thinkphp5-1/</guid><description>&lt;h3 id=&#34;think5审计与调试技巧1&#34;&gt;think5审计与调试技巧1&lt;/h3&gt;</description></item><item><title>统计学2:现代概率</title><link>https://blue-bird1.github.io/posts/statistics2/</link><pubDate>Mon, 07 Jan 2019 21:20:23 +0800</pubDate><guid>https://blue-bird1.github.io/posts/statistics2/</guid><description>&lt;h4 id=&#34;统计学2-现代概率&#34;&gt;统计学2: 现代概率&lt;/h4&gt;
&lt;p&gt;现代概率的一大特征是概率不确定性.古代概率研究的骰子可以认为每面的概率是1/6, 但是统计天气的时候, 就没有理由认为晴天和雨天的概率都是1/2.&lt;/p&gt;</description></item><item><title>统计与概率1 古典概率</title><link>https://blue-bird1.github.io/posts/statistics1/</link><pubDate>Sat, 05 Jan 2019 22:13:04 +0800</pubDate><guid>https://blue-bird1.github.io/posts/statistics1/</guid><description>统计与概率1 古典概率 概率的一个定义是一件事发生的一个情况的几率. 也可以表示成$f(\Omega, \omega, \varrho)$ 古典概率研究的是比较简单的情况, 例如硬币</description></item><item><title>Fuzz</title><link>https://blue-bird1.github.io/posts/fuzz/</link><pubDate>Sun, 02 Sep 2018 22:40:07 +0800</pubDate><guid>https://blue-bird1.github.io/posts/fuzz/</guid><description>fuzz工具非常多 如libfuzz honggfuzz KernelFuzzer 也有专注进行web fuzz的wfuzz 但是fuzz功能可以分成两种 只是生成测试用例和检测程序使用测试用</description></item><item><title>metasploit python 模块</title><link>https://blue-bird1.github.io/posts/metasploit1/</link><pubDate>Fri, 02 Feb 2018 22:57:52 +0800</pubDate><guid>https://blue-bird1.github.io/posts/metasploit1/</guid><description>metasploit在2017年尾将python作为官方支持语言,并且已经有python模块加入主分支.这使得我们开发metasploit模</description></item><item><title>metasploit python 模块是如何运行</title><link>https://blue-bird1.github.io/posts/metasploit2/</link><pubDate>Fri, 02 Feb 2018 22:57:52 +0800</pubDate><guid>https://blue-bird1.github.io/posts/metasploit2/</guid><description>开始 metasploit的扩展实现的代码主要在metasploit-framework/lib/msf/core/modules/exter</description></item><item><title>Metinfo3.5.19 getshell</title><link>https://blue-bird1.github.io/posts/metinfogetshell/</link><pubDate>Tue, 28 Nov 2017 22:26:19 +0800</pubDate><guid>https://blue-bird1.github.io/posts/metinfogetshell/</guid><description>metinfo后台getshellexp分析 漏洞版本3.5.19 漏洞文件路径/admin/app/physical/physical.php</description></item><item><title>metinfo3.5.18后台getshell分析</title><link>https://blue-bird1.github.io/posts/metinfoexp/</link><pubDate>Sat, 25 Nov 2017 22:26:31 +0800</pubDate><guid>https://blue-bird1.github.io/posts/metinfoexp/</guid><description>此漏洞已经在最新版修复 exp /admin/app/physical/physical.php?action=op&amp;amp;op=3&amp;amp;va</description></item><item><title/><link>https://blue-bird1.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blue-bird1.github.io/about/</guid><description>青鸟 一名无业游民
主要技能是编程 擅长CV大法 主要使用的编程语言
python golang 主要使用的工具
docker vim msf</description></item></channel></rss>